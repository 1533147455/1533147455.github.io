(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{403:function(a,t,e){"use strict";e.r(t);var s=e(69),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[a._v("#")]),a._v(" 分支")]),a._v(" "),e("p",[a._v("分支名其实是一个指针，指向某次提交记录")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git branch newBranch // 创建新分支，分支名newBranch,不切换到新分支\ngit checkout -b newBranch // 创建并切换到新分支\n")])])]),e("h4",{attrs:{id:"git-merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[a._v("#")]),a._v(" git merge")]),a._v(" "),e("p",[a._v("当前是在"),e("code",[a._v("main")]),a._v("分支上，要合并"),e("code",[a._v("bugFix")]),a._v("分支上的修改")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git merge bugFix\n")])])]),e("img",{attrs:{src:a.$withBase("/Git/image-20210303134635352.png"),alt:"图片加载失败"}}),a._v(" "),e("img",{attrs:{src:a.$withBase("/Git/image-20210303134724896.png"),alt:"图片加载失败"}}),a._v(" "),e("p",[a._v("再把"),e("code",[a._v("main")]),a._v("分支合并到"),e("code",[a._v("bugFix")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout bugFix\ngit merge main\n")])])]),e("img",{attrs:{src:a.$withBase("/Git/image-20210303134849742.png"),alt:"图片加载失败"}}),a._v(" "),e("p",[a._v("因为 "),e("code",[a._v("main")]),a._v(" 继承自 "),e("code",[a._v("bugFix")]),a._v("，"),e("code",[a._v("Git")]),a._v(" 什么都不用做，只是简单地把 "),e("code",[a._v("bugFix")]),a._v(" 移动到 "),e("code",[a._v("main")]),a._v(" 所指向的那个提交记录")]),a._v(" "),e("h4",{attrs:{id:"git-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[a._v("#")]),a._v(" git rebase")]),a._v(" "),e("p",[a._v("假如当前是在"),e("code",[a._v("bugFix")]),a._v("分支，执行"),e("code",[a._v("git rebase main")]),a._v("会把"),e("code",[a._v("bugFix")]),a._v("分支上的工作直接移到"),e("code",[a._v("main")]),a._v("分支上，移动以后会使得两个分支的功能看起来像是按顺序开发，但实际上它们是并行开发的")]),a._v(" "),e("img",{attrs:{src:a.$withBase("/Git/image-20210303135458343.png"),alt:"图片加载失败"}}),a._v(" "),e("img",{attrs:{src:a.$withBase("/Git/image-20210303135641702.png"),alt:"图片加载失败"}}),a._v(" "),e("p",[a._v("原先"),e("code",[a._v("bugFix")]),a._v("的提交记录 C3 依然存在（树上那个半透明的节点），而 C3' 是"),e("code",[a._v("rebase")]),a._v(" 到 "),e("code",[a._v("main")]),a._v("分支上的 C3 的副本，接下来需要将"),e("code",[a._v("main")]),a._v("也更新到 C3' 上")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout main\ngit rebase bugFix\n")])])]),e("img",{attrs:{src:a.$withBase("/Git/image-20210303135900342.png"),alt:"图片加载失败"}}),a._v(" "),e("p",[a._v("由于 "),e("code",[a._v("bugFix")]),a._v(" 继承自 "),e("code",[a._v("main")]),a._v("，所以 "),e("code",[a._v("Git")]),a._v(" 只是简单的把 "),e("code",[a._v("main")]),a._v(" 分支的引用向前移动了一下而已")]),a._v(" "),e("h4",{attrs:{id:"关联远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关联远程分支"}},[a._v("#")]),a._v(" 关联远程分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout -b [localBranch] [remoteBranch]\ngit branch -u [remoteBranch] [localBranch] // 如果当前就在localBranch分支上，可以省略[localBranch]\n")])])]),e("h4",{attrs:{id:"删除远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[a._v("#")]),a._v(" 删除远程分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push origin :foo // 删除远程的foo分支\n")])])]),e("h2",{attrs:{id:"常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[a._v("#")]),a._v(" 常见问题")]),a._v(" "),e("h3",{attrs:{id:"开发新功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发新功能"}},[a._v("#")]),a._v(" 开发新功能")]),a._v(" "),e("p",[a._v("例如要从"),e("code",[a._v("master")]),a._v("分支创建新分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout master // 切换到master分支\ngit pull // 拉取最新代码\ngit checkout -b newBranch // 创建并切换到新分支\ngit push // 看提示\ngit push --set-upstream origin newBranch // 关联到远程分支\n")])])]),e("p",[a._v("之后修改代码后直接"),e("code",[a._v("git push")]),a._v("即可")]),a._v(" "),e("h3",{attrs:{id:"同个分支别人已经提交过代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同个分支别人已经提交过代码"}},[a._v("#")]),a._v(" 同个分支别人已经提交过代码")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git fetch\ngit rebase o/main\ngit push\n")])])]),e("img",{attrs:{src:a.$withBase("/Git/image-20210303152007577.png"),alt:"图片加载失败"}}),a._v(" "),e("img",{attrs:{src:a.$withBase("/Git/image-20210303152023188.png"),alt:"图片加载失败"}}),a._v(" "),e("p",[a._v("如果换成")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git fetch\ngit merge o/main\ngit push\n")])])]),e("img",{attrs:{src:a.$withBase("/Git/image-20210303152218610.png"),alt:"图片加载失败"}}),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git pull = git fetch + git merge\ngit pull --rebase = git fetch + git rebase\n")])])]),e("h3",{attrs:{id:"将master分支合并到自己分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将master分支合并到自己分支"}},[a._v("#")]),a._v(" 将master分支合并到自己分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout master // 切换到master分支上\ngit pull\ngit checkout myBranch // 再切回自己分支\ngit merge master // 合并master上的更新内容\ngit push origin myBranch // 推送合并后的内容\n")])])]),e("h3",{attrs:{id:"想更新分支代码-而本地改动还不想提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#想更新分支代码-而本地改动还不想提交"}},[a._v("#")]),a._v(" 想更新分支代码，而本地改动还不想提交")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git stash // 把本地的改动先缓存\ngit pull\ngit stash pop // 把刚刚缓存的再拉出来\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);